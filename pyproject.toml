[tool.poetry]
name = "company"
version = "0.1.0"
description = ""
authors = ["victro-nuzhniy <nuzhniyva@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
flask-restful = "^0.3.10"
flask-sqlalchemy = "^3.1.1"
sqlalchemy = "^2.0.20"
python-dotenv = "^1.0.0"
flask-migrate = "^4.0.5"
pyjwt = "^2.8.0"
flask = "2.2.5"
flask-restful-swagger = "0.20.0"
flask-cors = "^4.0.0"

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
black = "^23.9.1"
xenon = "^0.9.1"
isort = "^5.12.0"
pre-commit = "^3.4.0"
mypy = "^1.8.0"
wemake-python-styleguide = "^0.18.0"
types-flask = "^1.1.6"
types-six = "^1.16.21.20240106"
types-requests = "^2.31.0.20240106"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^7.4.2"
pytest-mock = "^3.11.1"
pytest-sugar = "^0.9.7"
pytest-cov = "^4.1.0"
pytest-randomly = "^3.15.0"
pytest-clarity = "^1.0.1"
faker = "^19.6.2"
factory-boy = "^3.3.0"
pytest-flask = "^1.2.0"


[tool.black]
line-length = 88
include = '\.pyi?$'
include_trailing_comma = true
force-exclude = """
    .pre-commit-config.yaml,
    poetry.lock,
    pyproject.toml,
    README.me
"""
extend-exclude = '''
/(
  | dist
  | .pytest_cache
  | .tox
  | docs
  | docs_src
  | .venv
  | .mypy_cache
  | .pre-commit-config.yaml
  | poetry.lock
  | pyproject.toml
  | README.md
)/
'''


[tool.pytest.ini_options]
# === Pytest ===
pythonpath = [".", "api"]
norecursedirs = [".env", "migrations", "venv",]
testpaths = ["tests",]
console_output_style = "progress"
python_files = "test_*"
python_classes = "Test*"
python_functions = "test_*"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
